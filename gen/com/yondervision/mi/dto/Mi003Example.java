package com.yondervision.mi.dto;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Mi003Example {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    public Mi003Example() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    protected Mi003Example(Mi003Example example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table MI003
     *
     * @abatorgenerated Mon Nov 18 15:02:44 CST 2013
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andRoleidIsNull() {
            addCriterion("ROLEID is null");
            return this;
        }

        public Criteria andRoleidIsNotNull() {
            addCriterion("ROLEID is not null");
            return this;
        }

        public Criteria andRoleidEqualTo(String value) {
            addCriterion("ROLEID =", value, "roleid");
            return this;
        }

        public Criteria andRoleidNotEqualTo(String value) {
            addCriterion("ROLEID <>", value, "roleid");
            return this;
        }

        public Criteria andRoleidGreaterThan(String value) {
            addCriterion("ROLEID >", value, "roleid");
            return this;
        }

        public Criteria andRoleidGreaterThanOrEqualTo(String value) {
            addCriterion("ROLEID >=", value, "roleid");
            return this;
        }

        public Criteria andRoleidLessThan(String value) {
            addCriterion("ROLEID <", value, "roleid");
            return this;
        }

        public Criteria andRoleidLessThanOrEqualTo(String value) {
            addCriterion("ROLEID <=", value, "roleid");
            return this;
        }

        public Criteria andRoleidLike(String value) {
            addCriterion("ROLEID like", value, "roleid");
            return this;
        }

        public Criteria andRoleidNotLike(String value) {
            addCriterion("ROLEID not like", value, "roleid");
            return this;
        }

        public Criteria andRoleidIn(List values) {
            addCriterion("ROLEID in", values, "roleid");
            return this;
        }

        public Criteria andRoleidNotIn(List values) {
            addCriterion("ROLEID not in", values, "roleid");
            return this;
        }

        public Criteria andRoleidBetween(String value1, String value2) {
            addCriterion("ROLEID between", value1, value2, "roleid");
            return this;
        }

        public Criteria andRoleidNotBetween(String value1, String value2) {
            addCriterion("ROLEID not between", value1, value2, "roleid");
            return this;
        }

        public Criteria andRolenameIsNull() {
            addCriterion("ROLENAME is null");
            return this;
        }

        public Criteria andRolenameIsNotNull() {
            addCriterion("ROLENAME is not null");
            return this;
        }

        public Criteria andRolenameEqualTo(String value) {
            addCriterion("ROLENAME =", value, "rolename");
            return this;
        }

        public Criteria andRolenameNotEqualTo(String value) {
            addCriterion("ROLENAME <>", value, "rolename");
            return this;
        }

        public Criteria andRolenameGreaterThan(String value) {
            addCriterion("ROLENAME >", value, "rolename");
            return this;
        }

        public Criteria andRolenameGreaterThanOrEqualTo(String value) {
            addCriterion("ROLENAME >=", value, "rolename");
            return this;
        }

        public Criteria andRolenameLessThan(String value) {
            addCriterion("ROLENAME <", value, "rolename");
            return this;
        }

        public Criteria andRolenameLessThanOrEqualTo(String value) {
            addCriterion("ROLENAME <=", value, "rolename");
            return this;
        }

        public Criteria andRolenameLike(String value) {
            addCriterion("ROLENAME like", value, "rolename");
            return this;
        }

        public Criteria andRolenameNotLike(String value) {
            addCriterion("ROLENAME not like", value, "rolename");
            return this;
        }

        public Criteria andRolenameIn(List values) {
            addCriterion("ROLENAME in", values, "rolename");
            return this;
        }

        public Criteria andRolenameNotIn(List values) {
            addCriterion("ROLENAME not in", values, "rolename");
            return this;
        }

        public Criteria andRolenameBetween(String value1, String value2) {
            addCriterion("ROLENAME between", value1, value2, "rolename");
            return this;
        }

        public Criteria andRolenameNotBetween(String value1, String value2) {
            addCriterion("ROLENAME not between", value1, value2, "rolename");
            return this;
        }

        public Criteria andRightIsNull() {
            addCriterion("RIGHT is null");
            return this;
        }

        public Criteria andRightIsNotNull() {
            addCriterion("RIGHT is not null");
            return this;
        }

        public Criteria andRightEqualTo(String value) {
            addCriterion("RIGHT =", value, "right");
            return this;
        }

        public Criteria andRightNotEqualTo(String value) {
            addCriterion("RIGHT <>", value, "right");
            return this;
        }

        public Criteria andRightGreaterThan(String value) {
            addCriterion("RIGHT >", value, "right");
            return this;
        }

        public Criteria andRightGreaterThanOrEqualTo(String value) {
            addCriterion("RIGHT >=", value, "right");
            return this;
        }

        public Criteria andRightLessThan(String value) {
            addCriterion("RIGHT <", value, "right");
            return this;
        }

        public Criteria andRightLessThanOrEqualTo(String value) {
            addCriterion("RIGHT <=", value, "right");
            return this;
        }

        public Criteria andRightLike(String value) {
            addCriterion("RIGHT like", value, "right");
            return this;
        }

        public Criteria andRightNotLike(String value) {
            addCriterion("RIGHT not like", value, "right");
            return this;
        }

        public Criteria andRightIn(List values) {
            addCriterion("RIGHT in", values, "right");
            return this;
        }

        public Criteria andRightNotIn(List values) {
            addCriterion("RIGHT not in", values, "right");
            return this;
        }

        public Criteria andRightBetween(String value1, String value2) {
            addCriterion("RIGHT between", value1, value2, "right");
            return this;
        }

        public Criteria andRightNotBetween(String value1, String value2) {
            addCriterion("RIGHT not between", value1, value2, "right");
            return this;
        }

        public Criteria andCenteridIsNull() {
            addCriterion("CENTERID is null");
            return this;
        }

        public Criteria andCenteridIsNotNull() {
            addCriterion("CENTERID is not null");
            return this;
        }

        public Criteria andCenteridEqualTo(String value) {
            addCriterion("CENTERID =", value, "centerid");
            return this;
        }

        public Criteria andCenteridNotEqualTo(String value) {
            addCriterion("CENTERID <>", value, "centerid");
            return this;
        }

        public Criteria andCenteridGreaterThan(String value) {
            addCriterion("CENTERID >", value, "centerid");
            return this;
        }

        public Criteria andCenteridGreaterThanOrEqualTo(String value) {
            addCriterion("CENTERID >=", value, "centerid");
            return this;
        }

        public Criteria andCenteridLessThan(String value) {
            addCriterion("CENTERID <", value, "centerid");
            return this;
        }

        public Criteria andCenteridLessThanOrEqualTo(String value) {
            addCriterion("CENTERID <=", value, "centerid");
            return this;
        }

        public Criteria andCenteridLike(String value) {
            addCriterion("CENTERID like", value, "centerid");
            return this;
        }

        public Criteria andCenteridNotLike(String value) {
            addCriterion("CENTERID not like", value, "centerid");
            return this;
        }

        public Criteria andCenteridIn(List values) {
            addCriterion("CENTERID in", values, "centerid");
            return this;
        }

        public Criteria andCenteridNotIn(List values) {
            addCriterion("CENTERID not in", values, "centerid");
            return this;
        }

        public Criteria andCenteridBetween(String value1, String value2) {
            addCriterion("CENTERID between", value1, value2, "centerid");
            return this;
        }

        public Criteria andCenteridNotBetween(String value1, String value2) {
            addCriterion("CENTERID not between", value1, value2, "centerid");
            return this;
        }

        public Criteria andAttributeflgIsNull() {
            addCriterion("ATTRIBUTEFLG is null");
            return this;
        }

        public Criteria andAttributeflgIsNotNull() {
            addCriterion("ATTRIBUTEFLG is not null");
            return this;
        }

        public Criteria andAttributeflgEqualTo(String value) {
            addCriterion("ATTRIBUTEFLG =", value, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgNotEqualTo(String value) {
            addCriterion("ATTRIBUTEFLG <>", value, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgGreaterThan(String value) {
            addCriterion("ATTRIBUTEFLG >", value, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgGreaterThanOrEqualTo(String value) {
            addCriterion("ATTRIBUTEFLG >=", value, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgLessThan(String value) {
            addCriterion("ATTRIBUTEFLG <", value, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgLessThanOrEqualTo(String value) {
            addCriterion("ATTRIBUTEFLG <=", value, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgLike(String value) {
            addCriterion("ATTRIBUTEFLG like", value, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgNotLike(String value) {
            addCriterion("ATTRIBUTEFLG not like", value, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgIn(List values) {
            addCriterion("ATTRIBUTEFLG in", values, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgNotIn(List values) {
            addCriterion("ATTRIBUTEFLG not in", values, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgBetween(String value1, String value2) {
            addCriterion("ATTRIBUTEFLG between", value1, value2, "attributeflg");
            return this;
        }

        public Criteria andAttributeflgNotBetween(String value1, String value2) {
            addCriterion("ATTRIBUTEFLG not between", value1, value2, "attributeflg");
            return this;
        }
    }
}