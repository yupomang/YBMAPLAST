package com.yondervision.mi.dto;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Mi130Example {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    protected List oredCriteria;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    public Mi130Example() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    protected Mi130Example(Mi130Example example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table MI130
     *
     * @abatorgenerated Tue Jan 13 16:02:19 CST 2015
     */
    public static class Criteria {
        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andGroupidIsNull() {
            addCriterion("GROUPID is null");
            return this;
        }

        public Criteria andGroupidIsNotNull() {
            addCriterion("GROUPID is not null");
            return this;
        }

        public Criteria andGroupidEqualTo(String value) {
            addCriterion("GROUPID =", value, "groupid");
            return this;
        }

        public Criteria andGroupidNotEqualTo(String value) {
            addCriterion("GROUPID <>", value, "groupid");
            return this;
        }

        public Criteria andGroupidGreaterThan(String value) {
            addCriterion("GROUPID >", value, "groupid");
            return this;
        }

        public Criteria andGroupidGreaterThanOrEqualTo(String value) {
            addCriterion("GROUPID >=", value, "groupid");
            return this;
        }

        public Criteria andGroupidLessThan(String value) {
            addCriterion("GROUPID <", value, "groupid");
            return this;
        }

        public Criteria andGroupidLessThanOrEqualTo(String value) {
            addCriterion("GROUPID <=", value, "groupid");
            return this;
        }

        public Criteria andGroupidLike(String value) {
            addCriterion("GROUPID like", value, "groupid");
            return this;
        }

        public Criteria andGroupidNotLike(String value) {
            addCriterion("GROUPID not like", value, "groupid");
            return this;
        }

        public Criteria andGroupidIn(List values) {
            addCriterion("GROUPID in", values, "groupid");
            return this;
        }

        public Criteria andGroupidNotIn(List values) {
            addCriterion("GROUPID not in", values, "groupid");
            return this;
        }

        public Criteria andGroupidBetween(String value1, String value2) {
            addCriterion("GROUPID between", value1, value2, "groupid");
            return this;
        }

        public Criteria andGroupidNotBetween(String value1, String value2) {
            addCriterion("GROUPID not between", value1, value2, "groupid");
            return this;
        }

        public Criteria andCenteridIsNull() {
            addCriterion("CENTERID is null");
            return this;
        }

        public Criteria andCenteridIsNotNull() {
            addCriterion("CENTERID is not null");
            return this;
        }

        public Criteria andCenteridEqualTo(String value) {
            addCriterion("CENTERID =", value, "centerid");
            return this;
        }

        public Criteria andCenteridNotEqualTo(String value) {
            addCriterion("CENTERID <>", value, "centerid");
            return this;
        }

        public Criteria andCenteridGreaterThan(String value) {
            addCriterion("CENTERID >", value, "centerid");
            return this;
        }

        public Criteria andCenteridGreaterThanOrEqualTo(String value) {
            addCriterion("CENTERID >=", value, "centerid");
            return this;
        }

        public Criteria andCenteridLessThan(String value) {
            addCriterion("CENTERID <", value, "centerid");
            return this;
        }

        public Criteria andCenteridLessThanOrEqualTo(String value) {
            addCriterion("CENTERID <=", value, "centerid");
            return this;
        }

        public Criteria andCenteridLike(String value) {
            addCriterion("CENTERID like", value, "centerid");
            return this;
        }

        public Criteria andCenteridNotLike(String value) {
            addCriterion("CENTERID not like", value, "centerid");
            return this;
        }

        public Criteria andCenteridIn(List values) {
            addCriterion("CENTERID in", values, "centerid");
            return this;
        }

        public Criteria andCenteridNotIn(List values) {
            addCriterion("CENTERID not in", values, "centerid");
            return this;
        }

        public Criteria andCenteridBetween(String value1, String value2) {
            addCriterion("CENTERID between", value1, value2, "centerid");
            return this;
        }

        public Criteria andCenteridNotBetween(String value1, String value2) {
            addCriterion("CENTERID not between", value1, value2, "centerid");
            return this;
        }

        public Criteria andGroupnameIsNull() {
            addCriterion("GROUPNAME is null");
            return this;
        }

        public Criteria andGroupnameIsNotNull() {
            addCriterion("GROUPNAME is not null");
            return this;
        }

        public Criteria andGroupnameEqualTo(String value) {
            addCriterion("GROUPNAME =", value, "groupname");
            return this;
        }

        public Criteria andGroupnameNotEqualTo(String value) {
            addCriterion("GROUPNAME <>", value, "groupname");
            return this;
        }

        public Criteria andGroupnameGreaterThan(String value) {
            addCriterion("GROUPNAME >", value, "groupname");
            return this;
        }

        public Criteria andGroupnameGreaterThanOrEqualTo(String value) {
            addCriterion("GROUPNAME >=", value, "groupname");
            return this;
        }

        public Criteria andGroupnameLessThan(String value) {
            addCriterion("GROUPNAME <", value, "groupname");
            return this;
        }

        public Criteria andGroupnameLessThanOrEqualTo(String value) {
            addCriterion("GROUPNAME <=", value, "groupname");
            return this;
        }

        public Criteria andGroupnameLike(String value) {
            addCriterion("GROUPNAME like", value, "groupname");
            return this;
        }

        public Criteria andGroupnameNotLike(String value) {
            addCriterion("GROUPNAME not like", value, "groupname");
            return this;
        }

        public Criteria andGroupnameIn(List values) {
            addCriterion("GROUPNAME in", values, "groupname");
            return this;
        }

        public Criteria andGroupnameNotIn(List values) {
            addCriterion("GROUPNAME not in", values, "groupname");
            return this;
        }

        public Criteria andGroupnameBetween(String value1, String value2) {
            addCriterion("GROUPNAME between", value1, value2, "groupname");
            return this;
        }

        public Criteria andGroupnameNotBetween(String value1, String value2) {
            addCriterion("GROUPNAME not between", value1, value2, "groupname");
            return this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("CREATETIME is null");
            return this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("CREATETIME is not null");
            return this;
        }

        public Criteria andCreatetimeEqualTo(String value) {
            addCriterion("CREATETIME =", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeNotEqualTo(String value) {
            addCriterion("CREATETIME <>", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeGreaterThan(String value) {
            addCriterion("CREATETIME >", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(String value) {
            addCriterion("CREATETIME >=", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeLessThan(String value) {
            addCriterion("CREATETIME <", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(String value) {
            addCriterion("CREATETIME <=", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeLike(String value) {
            addCriterion("CREATETIME like", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeNotLike(String value) {
            addCriterion("CREATETIME not like", value, "createtime");
            return this;
        }

        public Criteria andCreatetimeIn(List values) {
            addCriterion("CREATETIME in", values, "createtime");
            return this;
        }

        public Criteria andCreatetimeNotIn(List values) {
            addCriterion("CREATETIME not in", values, "createtime");
            return this;
        }

        public Criteria andCreatetimeBetween(String value1, String value2) {
            addCriterion("CREATETIME between", value1, value2, "createtime");
            return this;
        }

        public Criteria andCreatetimeNotBetween(String value1, String value2) {
            addCriterion("CREATETIME not between", value1, value2, "createtime");
            return this;
        }

        public Criteria andOperatorIsNull() {
            addCriterion("OPERATOR is null");
            return this;
        }

        public Criteria andOperatorIsNotNull() {
            addCriterion("OPERATOR is not null");
            return this;
        }

        public Criteria andOperatorEqualTo(String value) {
            addCriterion("OPERATOR =", value, "operator");
            return this;
        }

        public Criteria andOperatorNotEqualTo(String value) {
            addCriterion("OPERATOR <>", value, "operator");
            return this;
        }

        public Criteria andOperatorGreaterThan(String value) {
            addCriterion("OPERATOR >", value, "operator");
            return this;
        }

        public Criteria andOperatorGreaterThanOrEqualTo(String value) {
            addCriterion("OPERATOR >=", value, "operator");
            return this;
        }

        public Criteria andOperatorLessThan(String value) {
            addCriterion("OPERATOR <", value, "operator");
            return this;
        }

        public Criteria andOperatorLessThanOrEqualTo(String value) {
            addCriterion("OPERATOR <=", value, "operator");
            return this;
        }

        public Criteria andOperatorLike(String value) {
            addCriterion("OPERATOR like", value, "operator");
            return this;
        }

        public Criteria andOperatorNotLike(String value) {
            addCriterion("OPERATOR not like", value, "operator");
            return this;
        }

        public Criteria andOperatorIn(List values) {
            addCriterion("OPERATOR in", values, "operator");
            return this;
        }

        public Criteria andOperatorNotIn(List values) {
            addCriterion("OPERATOR not in", values, "operator");
            return this;
        }

        public Criteria andOperatorBetween(String value1, String value2) {
            addCriterion("OPERATOR between", value1, value2, "operator");
            return this;
        }

        public Criteria andOperatorNotBetween(String value1, String value2) {
            addCriterion("OPERATOR not between", value1, value2, "operator");
            return this;
        }

        public Criteria andFreeuse1IsNull() {
            addCriterion("FREEUSE1 is null");
            return this;
        }

        public Criteria andFreeuse1IsNotNull() {
            addCriterion("FREEUSE1 is not null");
            return this;
        }

        public Criteria andFreeuse1EqualTo(String value) {
            addCriterion("FREEUSE1 =", value, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1NotEqualTo(String value) {
            addCriterion("FREEUSE1 <>", value, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1GreaterThan(String value) {
            addCriterion("FREEUSE1 >", value, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1GreaterThanOrEqualTo(String value) {
            addCriterion("FREEUSE1 >=", value, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1LessThan(String value) {
            addCriterion("FREEUSE1 <", value, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1LessThanOrEqualTo(String value) {
            addCriterion("FREEUSE1 <=", value, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1Like(String value) {
            addCriterion("FREEUSE1 like", value, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1NotLike(String value) {
            addCriterion("FREEUSE1 not like", value, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1In(List values) {
            addCriterion("FREEUSE1 in", values, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1NotIn(List values) {
            addCriterion("FREEUSE1 not in", values, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1Between(String value1, String value2) {
            addCriterion("FREEUSE1 between", value1, value2, "freeuse1");
            return this;
        }

        public Criteria andFreeuse1NotBetween(String value1, String value2) {
            addCriterion("FREEUSE1 not between", value1, value2, "freeuse1");
            return this;
        }

        public Criteria andFreeuse2IsNull() {
            addCriterion("FREEUSE2 is null");
            return this;
        }

        public Criteria andFreeuse2IsNotNull() {
            addCriterion("FREEUSE2 is not null");
            return this;
        }

        public Criteria andFreeuse2EqualTo(String value) {
            addCriterion("FREEUSE2 =", value, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2NotEqualTo(String value) {
            addCriterion("FREEUSE2 <>", value, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2GreaterThan(String value) {
            addCriterion("FREEUSE2 >", value, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2GreaterThanOrEqualTo(String value) {
            addCriterion("FREEUSE2 >=", value, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2LessThan(String value) {
            addCriterion("FREEUSE2 <", value, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2LessThanOrEqualTo(String value) {
            addCriterion("FREEUSE2 <=", value, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2Like(String value) {
            addCriterion("FREEUSE2 like", value, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2NotLike(String value) {
            addCriterion("FREEUSE2 not like", value, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2In(List values) {
            addCriterion("FREEUSE2 in", values, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2NotIn(List values) {
            addCriterion("FREEUSE2 not in", values, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2Between(String value1, String value2) {
            addCriterion("FREEUSE2 between", value1, value2, "freeuse2");
            return this;
        }

        public Criteria andFreeuse2NotBetween(String value1, String value2) {
            addCriterion("FREEUSE2 not between", value1, value2, "freeuse2");
            return this;
        }
    }
}