package com.yondervision.mi.dto;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Mi901Example {

	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Abator for iBATIS. This field corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	public Mi901Example() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	protected Mi901Example(Mi901Example example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Abator for iBATIS. This method corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Abator for iBATIS. This class corresponds to the database table MI901
	 * @abatorgenerated  Thu Dec 04 14:13:39 CST 2014
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andXhIsNull() {
			addCriterion("XH is null");
			return this;
		}

		public Criteria andXhIsNotNull() {
			addCriterion("XH is not null");
			return this;
		}

		public Criteria andXhEqualTo(Integer value) {
			addCriterion("XH =", value, "xh");
			return this;
		}

		public Criteria andXhNotEqualTo(Integer value) {
			addCriterion("XH <>", value, "xh");
			return this;
		}

		public Criteria andXhGreaterThan(Integer value) {
			addCriterion("XH >", value, "xh");
			return this;
		}

		public Criteria andXhGreaterThanOrEqualTo(Integer value) {
			addCriterion("XH >=", value, "xh");
			return this;
		}

		public Criteria andXhLessThan(Integer value) {
			addCriterion("XH <", value, "xh");
			return this;
		}

		public Criteria andXhLessThanOrEqualTo(Integer value) {
			addCriterion("XH <=", value, "xh");
			return this;
		}

		public Criteria andXhIn(List values) {
			addCriterion("XH in", values, "xh");
			return this;
		}

		public Criteria andXhNotIn(List values) {
			addCriterion("XH not in", values, "xh");
			return this;
		}

		public Criteria andXhBetween(Integer value1, Integer value2) {
			addCriterion("XH between", value1, value2, "xh");
			return this;
		}

		public Criteria andXhNotBetween(Integer value1, Integer value2) {
			addCriterion("XH not between", value1, value2, "xh");
			return this;
		}

		public Criteria andNicknameIsNull() {
			addCriterion("NICKNAME is null");
			return this;
		}

		public Criteria andNicknameIsNotNull() {
			addCriterion("NICKNAME is not null");
			return this;
		}

		public Criteria andNicknameEqualTo(String value) {
			addCriterion("NICKNAME =", value, "nickname");
			return this;
		}

		public Criteria andNicknameNotEqualTo(String value) {
			addCriterion("NICKNAME <>", value, "nickname");
			return this;
		}

		public Criteria andNicknameGreaterThan(String value) {
			addCriterion("NICKNAME >", value, "nickname");
			return this;
		}

		public Criteria andNicknameGreaterThanOrEqualTo(String value) {
			addCriterion("NICKNAME >=", value, "nickname");
			return this;
		}

		public Criteria andNicknameLessThan(String value) {
			addCriterion("NICKNAME <", value, "nickname");
			return this;
		}

		public Criteria andNicknameLessThanOrEqualTo(String value) {
			addCriterion("NICKNAME <=", value, "nickname");
			return this;
		}

		public Criteria andNicknameLike(String value) {
			addCriterion("NICKNAME like", value, "nickname");
			return this;
		}

		public Criteria andNicknameNotLike(String value) {
			addCriterion("NICKNAME not like", value, "nickname");
			return this;
		}

		public Criteria andNicknameIn(List values) {
			addCriterion("NICKNAME in", values, "nickname");
			return this;
		}

		public Criteria andNicknameNotIn(List values) {
			addCriterion("NICKNAME not in", values, "nickname");
			return this;
		}

		public Criteria andNicknameBetween(String value1, String value2) {
			addCriterion("NICKNAME between", value1, value2, "nickname");
			return this;
		}

		public Criteria andNicknameNotBetween(String value1, String value2) {
			addCriterion("NICKNAME not between", value1, value2, "nickname");
			return this;
		}

		public Criteria andTrandateIsNull() {
			addCriterion("TRANDATE is null");
			return this;
		}

		public Criteria andTrandateIsNotNull() {
			addCriterion("TRANDATE is not null");
			return this;
		}

		public Criteria andTrandateEqualTo(String value) {
			addCriterion("TRANDATE =", value, "trandate");
			return this;
		}

		public Criteria andTrandateNotEqualTo(String value) {
			addCriterion("TRANDATE <>", value, "trandate");
			return this;
		}

		public Criteria andTrandateGreaterThan(String value) {
			addCriterion("TRANDATE >", value, "trandate");
			return this;
		}

		public Criteria andTrandateGreaterThanOrEqualTo(String value) {
			addCriterion("TRANDATE >=", value, "trandate");
			return this;
		}

		public Criteria andTrandateLessThan(String value) {
			addCriterion("TRANDATE <", value, "trandate");
			return this;
		}

		public Criteria andTrandateLessThanOrEqualTo(String value) {
			addCriterion("TRANDATE <=", value, "trandate");
			return this;
		}

		public Criteria andTrandateLike(String value) {
			addCriterion("TRANDATE like", value, "trandate");
			return this;
		}

		public Criteria andTrandateNotLike(String value) {
			addCriterion("TRANDATE not like", value, "trandate");
			return this;
		}

		public Criteria andTrandateIn(List values) {
			addCriterion("TRANDATE in", values, "trandate");
			return this;
		}

		public Criteria andTrandateNotIn(List values) {
			addCriterion("TRANDATE not in", values, "trandate");
			return this;
		}

		public Criteria andTrandateBetween(String value1, String value2) {
			addCriterion("TRANDATE between", value1, value2, "trandate");
			return this;
		}

		public Criteria andTrandateNotBetween(String value1, String value2) {
			addCriterion("TRANDATE not between", value1, value2, "trandate");
			return this;
		}

		public Criteria andCreatetimeIsNull() {
			addCriterion("CREATETIME is null");
			return this;
		}

		public Criteria andCreatetimeIsNotNull() {
			addCriterion("CREATETIME is not null");
			return this;
		}

		public Criteria andCreatetimeEqualTo(String value) {
			addCriterion("CREATETIME =", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotEqualTo(String value) {
			addCriterion("CREATETIME <>", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeGreaterThan(String value) {
			addCriterion("CREATETIME >", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeGreaterThanOrEqualTo(String value) {
			addCriterion("CREATETIME >=", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeLessThan(String value) {
			addCriterion("CREATETIME <", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeLessThanOrEqualTo(String value) {
			addCriterion("CREATETIME <=", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeLike(String value) {
			addCriterion("CREATETIME like", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotLike(String value) {
			addCriterion("CREATETIME not like", value, "createtime");
			return this;
		}

		public Criteria andCreatetimeIn(List values) {
			addCriterion("CREATETIME in", values, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotIn(List values) {
			addCriterion("CREATETIME not in", values, "createtime");
			return this;
		}

		public Criteria andCreatetimeBetween(String value1, String value2) {
			addCriterion("CREATETIME between", value1, value2, "createtime");
			return this;
		}

		public Criteria andCreatetimeNotBetween(String value1, String value2) {
			addCriterion("CREATETIME not between", value1, value2, "createtime");
			return this;
		}

		public Criteria andDevicetokenIsNull() {
			addCriterion("DEVICETOKEN is null");
			return this;
		}

		public Criteria andDevicetokenIsNotNull() {
			addCriterion("DEVICETOKEN is not null");
			return this;
		}

		public Criteria andDevicetokenEqualTo(String value) {
			addCriterion("DEVICETOKEN =", value, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenNotEqualTo(String value) {
			addCriterion("DEVICETOKEN <>", value, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenGreaterThan(String value) {
			addCriterion("DEVICETOKEN >", value, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenGreaterThanOrEqualTo(String value) {
			addCriterion("DEVICETOKEN >=", value, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenLessThan(String value) {
			addCriterion("DEVICETOKEN <", value, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenLessThanOrEqualTo(String value) {
			addCriterion("DEVICETOKEN <=", value, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenLike(String value) {
			addCriterion("DEVICETOKEN like", value, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenNotLike(String value) {
			addCriterion("DEVICETOKEN not like", value, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenIn(List values) {
			addCriterion("DEVICETOKEN in", values, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenNotIn(List values) {
			addCriterion("DEVICETOKEN not in", values, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenBetween(String value1, String value2) {
			addCriterion("DEVICETOKEN between", value1, value2, "devicetoken");
			return this;
		}

		public Criteria andDevicetokenNotBetween(String value1, String value2) {
			addCriterion("DEVICETOKEN not between", value1, value2,
					"devicetoken");
			return this;
		}
	}
}