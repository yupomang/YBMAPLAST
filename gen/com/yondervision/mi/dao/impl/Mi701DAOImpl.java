package com.yondervision.mi.dao.impl;

import com.yondervision.mi.dao.Mi701DAO;
import com.yondervision.mi.dto.Mi701;
import com.yondervision.mi.dto.Mi701Example;
import com.yondervision.mi.dto.Mi701WithBLOBs;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class Mi701DAOImpl extends SqlMapClientDaoSupport implements Mi701DAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public Mi701DAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public void insert(Mi701WithBLOBs record) {
        getSqlMapClientTemplate().insert("MI701.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public int updateByPrimaryKey(Mi701 record) {
        int rows = getSqlMapClientTemplate().update("MI701.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public int updateByPrimaryKey(Mi701WithBLOBs record) {
        int rows = getSqlMapClientTemplate().update("MI701.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public int updateByPrimaryKeySelective(Mi701WithBLOBs record) {
        int rows = getSqlMapClientTemplate().update("MI701.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public List selectByExampleWithoutBLOBs(Mi701Example example) {
        List list = getSqlMapClientTemplate().queryForList("MI701.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public List selectByExampleWithBLOBs(Mi701Example example) {
        List list = getSqlMapClientTemplate().queryForList("MI701.abatorgenerated_selectByExampleWithBLOBs", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public Mi701WithBLOBs selectByPrimaryKey(Integer seqno) {
        Mi701 key = new Mi701();
        key.setSeqno(seqno);
        Mi701WithBLOBs record = (Mi701WithBLOBs) getSqlMapClientTemplate().queryForObject("MI701.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public int deleteByExample(Mi701Example example) {
        int rows = getSqlMapClientTemplate().delete("MI701.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public int deleteByPrimaryKey(Integer seqno) {
        Mi701 key = new Mi701();
        key.setSeqno(seqno);
        int rows = getSqlMapClientTemplate().delete("MI701.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public int countByExample(Mi701Example example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("MI701.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public int updateByExampleSelective(Mi701WithBLOBs record, Mi701Example example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("MI701.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public int updateByExample(Mi701WithBLOBs record, Mi701Example example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("MI701.abatorgenerated_updateByExampleWithBLOBs", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    public int updateByExample(Mi701 record, Mi701Example example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("MI701.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table MI701
     *
     * @abatorgenerated Thu Apr 28 17:32:31 CST 2016
     */
    private static class UpdateByExampleParms extends Mi701Example {
        private Object record;

        public UpdateByExampleParms(Object record, Mi701Example example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}